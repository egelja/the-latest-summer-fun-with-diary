name: Build and Push

on:
  workflow_dispatch:
  push:
    tags:
      - "v*"

env:
  PROJECT_ID: "631869"

jobs:
  modpack-info:
    runs-on: ubuntu-latest
    outputs:
      projectname: ${{ steps.info.outputs.projectname }}
      version: ${{ steps.info.outputs.version }}
      tag: ${{ steps.version.outputs.tag }}
      release-type: ${{ steps.release-type.outputs.type }}
      pre-release: ${{ steps.release-type.outputs.pre-release }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Get modpack info
        id: info
        run: |
          manifestjson=`cat ./modpack/manifest.json`
          projectname=`echo $(jq -r '.name' <<< "$manifestjson")`
          echo "::set-output name=projectname::$projectname"
          version=`echo $(jq -r '.minecraft.version' <<< "$manifestjson")`
          echo "::set-output name=version::$version"
      - name: Get tag
        id: version
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
      - name: Get release type
        id: release-type
        run: |
          rel_type="release"
          prerelease=false
          case "${{ steps.version.outputs.tag }}" in
            *alpha*)
              rel_type="alpha"
              prerelease=true
              ;;
            *beta*)
              rel_type="beta"
              prerelease=true
              ;;
            *)
              rel_type="release"
              prerelease=false
              ;;
          esac
          echo "::set-output name=type::$rel_type"
          echo "::set-output name=pre-release::$prerelease"

  changelog:
    runs-on: ubuntu-latest
    outputs:
      changelog: ${{ steps.changelog.outputs.changelog }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Generate changelog
        id: changelog
        uses: metcalfc/changelog-generator@v4.1.0
        with:
          myToken: ${{ secrets.GITHUB_TOKEN }}
      - name: Write changelog to file
        uses: DamianReeves/write-file-action@v1.2
        with:
          path: ./CHANGELOG.md
          contents: "${{ steps.changelog.outputs.changelog }}"
      - name: Store changelog
        uses: actions/upload-artifact@v3
        with:
          name: changelog
          path: CHANGELOG.md

  build:
    runs-on: ubuntu-latest
    needs: [changelog, modpack-info]
    outputs:
      filename_spaces: ${{ steps.filename.outputs.spaces }}
      filename_no_spaces: ${{ steps.filename.outputs.no_spaces }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Download PAX
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          repo: froehlichA/pax
          file: "pax"
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Download changelog
        uses: actions/download-artifact@v4
        with:
          name: changelog
      - name: Copy important files
        run: |
          cp ./CHANGELOG.md ./modpack/overrides/CHANGELOG.md
          cp ./README.md ./modpack/overrides/README.md
          cp ./LICENSE.md ./modpack/overrides/LICENSE.md
          cp ./TODO.md ./modpack/overrides/TODO.md
          cp ./CREDITS.md ./modpack/overrides/CREDITS.md
      - name: Export modpack
        run: |
          sudo chmod +x ./pax
          ./pax export
      - name: Remove spaces from filename
        id: filename
        run: |
          spaces='${{ needs.modpack-info.outputs.projectname }}-${{ needs.modpack-info.outputs.tag }}'
          no_spaces=${spaces//[^a-zA-Z0-9.()\-]/_}
          echo "::set-output name=spaces::$spaces"
          echo "::set-output name=no_spaces::$no_spaces"
      - name: Rename zip
        run: |
          mv '.out/${{ needs.modpack-info.outputs.projectname }}.zip' '.out/${{ steps.filename.outputs.no_spaces }}.zip'
      - name: Upload zip
        uses: actions/upload-artifact@v3
        with:
          name: modpack
          path: .out/${{ steps.filename.outputs.no_spaces }}.zip

  release-github:
    runs-on: ubuntu-latest
    needs: [build, changelog, modpack-info]
    steps:
      - name: Download modpack
        uses: actions/download-artifact@v4
        with:
          name: modpack
      - name: Download changelog
        uses: actions/download-artifact@v4
        with:
          name: changelog
      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          body_path: CHANGELOG.md
          files: ${{ needs.build.outputs.filename_no_spaces }}.zip
          prerelease: "${{ needs.modpack-info.outputs.pre-release }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release-curseforge:
    runs-on: ubuntu-latest
    needs: [build, changelog, modpack-info]
    steps:
      - name: Download modpack
        uses: actions/download-artifact@v4
        with:
          name: modpack
      - name: Create release
        uses: itsmeow/curseforge-upload@v3
        with:
          token: ${{ secrets.CF_API_TOKEN }}
          project_id: ${{ env.PROJECT_ID }}
          game_endpoint: minecraft
          file_path: ${{ needs.build.outputs.filename_no_spaces }}.zip
          display_name: ${{ needs.build.outputs.filename_spaces }}
          changelog: "${{ needs.changelog.outputs.changelog }}"
          changelog_type: markdown
          game_versions: 9008 # 1.18.2      ${{ needs.modpack-info.outputs.version }}
          release_type: ${{ needs.modpack-info.outputs.release-type }}
